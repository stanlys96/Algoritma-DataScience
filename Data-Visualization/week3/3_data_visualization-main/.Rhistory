head(vids)
# 6 baris terakhir kolom publish_time
tail(vids$publish_time)
# urutan publish_time: y m d h ms
ymd_hms(tail(vids$publish_time))
# mencoba penulisan format waktu dari UTC ke zona waktu Amerika (New York) dalam EST
ymd_hms(tail(vids$publish_time), tz = "America/New_York")
# melakukan assignment untuk mengubah tipe data kolom
vids$publish_time <-ymd_hms(vids$publish_time, tz = "America/New_York")
head(vids)
str(vids)
# nilai unik kolom category_id pada dataframe vids
unique(vids$category_id)
# contoh penggunaan switch() untuk 1 nilai
switch(3, # data
"1" = "Education",
"4" = "Travel",
"3" = "Music")
# # will return error
# # cara uncomment: Ctrl + Shift + C
# switch(c("1","2"),
#        "1" = "Education",
#        "2" = "Travel",
#        "3" = "Music")
data <- c("1", "2", "2", "4")
sapply(X = data, # data/kolom yang ingin diubah
FUN = switch, # fungsi
"1" = "Education",
"2" = "Travel",
"4" = "Music")
# mengubah kategori dalam bentuk angka menjadi nama kategori
vids$category_id <- sapply(as.character(vids$category_id), switch,
"1" = "Film and Animation",
"2" = "Autos and Vehicles",
"10" = "Music",
"15" = "Pets and Animals",
"17" = "Sports",
"19" = "Travel and Events",
"20" = "Gaming",
"22" = "People and Blogs",
"23" = "Comedy",
"24" = "Entertainment",
"25" = "News and Politics",
"26" = "Howto and Style",
"27" = "Education",
"28" = "Science and Technology",
"29" = "Nonprofit and Activism",
"43" = "Shows")
# mengubah tipe data category_id menjadi factor
vids$category_id <- as.factor(vids$category_id)
# 6 baris pertama dataframe vids
head(vids)
# recheck
str(vids)
str(vids)
head(hour(vids$publish_time))
head(vids$publish_time)
# mengekstrak jam pada publish_time
vids$publish_hour <- hour(vids$publish_time)
head(vids)
# fungsi untuk menentukan kategori publish_hour: publish_category
publish_category <- function(x){
if(x < 8){
x <- "12am to 7am" # video dengan publish_hour jam 12 malam sampai sebelum jam 8 pagi
}else if(x >= 8 & x < 16){
x <- "8am to 3pm" # video dengan publish_hour jam 8 pagi sampai sebelum jam 4 sore
}else{
x <- "4pm to 12am" # video dengan publish_hour jam 4 sore sampai sebelum 12 malam
}
}
# contoh penggunaan fungsi publish_category
print(publish_category(10))
head(sapply(vids$publish_hour, FUN=publish_category))
# menentukan kategori jam pada kolom publish_hour dan menyimpan ke kolom publish_when
vids$publish_when <- sapply(vids$publish_hour, FUN=publish_category)
# mengubah tipe data kolom publish_when menjadi factor
vids$publish_when <- as.factor(vids$publish_when)
# recheck
head(vids)
# mengekstrak tanggal dari kolom publish_time dan menyimpannya ke kolom publish_date
# kode Pak Aditya
vids$publish_date <- date(vids$publish_time)
# recheck
head(vids)
# mengekstrak nama hari yang tidak disingkat dari kolom publish_time dan menyimpannya ke kolom publish_wday
# abbr = TRUE, kita mau menyingkat penamaan hari
vids$publish_wday <- wday(vids$publish_time, label = TRUE, abbr = FALSE)
# recheck
head(vids)
# banyak baris vids
nrow(vids)
# banyak judul video yang unik
length(unique(vids$title))
# dummy data
df <- data.frame(nama = c("Aya","Rany","Rany", "Dwi", "Dwi"),
umur = c(23,23,24,24,25))
df
# mengambil nama unique
unique(df$nama)
# mencari indeks saat nama unique pertama kali muncul
index <- match(unique(df$nama), df$nama)
index
# filter data yang termasuk indeks (tidak akan memasukkan yang redundan)
# dataframe[baris, kolom]
df[index,]
# mencari indeks yang menunjukkan kemunculan video pertama kali
index_vids <- match(unique(vids$title), vids$title)
# mengambil data video ketika pertama kali trending
vids_unik <- vids[index_vids,]
# banyak baris vids_unik
nrow(vids_unik)
# banyak judul video yang unik
length(unique(vids$title))
str(vids_unik)
head(vids_unik)
# distribusi jam publish video trending
hist(vids_unik$publish_hour)
head(vids_unik)
# bar plot frekuensi hari publish video trending
# kode Pak Supratno
plot(vids_unik$publish_wday)
head(vids_unik)
# likes_views: likes / views
vids_unik$likes_views <- vids_unik$likes/vids_unik$views
head(vids_unik)
# distribusi likes/views untuk setiap publish_hour
plot(x = as.factor(vids_unik$publish_hour), y = vids_unik$likes_views)
head(vids_unik)
as.data.frame(table(vids_unik$trending_date))
trending <- as.data.frame(table(vids_unik$trending_date))
head(trending)
trending$Var1 <- ymd(trending$Var1 )
head(trending)
# pergerakan banyak video trending selama  2023
plot(x = trending$Var1, y = trending$Freq, type = 'l')
head(vids_unik)
# comments_view: comment_count / views
vids_unik$comments_views <- vids_unik$comment_count/vids_unik$views
head(vids_unik)
vids_unik$category_id %in% c("Howto and Style",
"Pets and Animals",
"Travel and Events")
# subset dan masukkan ke vids_hpt
# dataframe[baris, kolom]
vids_hpt <- vids_unik[vids_unik$category_id %in% c("Howto and Style",
"Pets and Animals",
"Travel and Events"), ]
head(vids_hpt)
# cek level
unique(vids_hpt$category_id)
# menghapus level yang tidak ada pada data
vids_hpt$category_id <- droplevels(vids_hpt$category_id )
# recheck level
unique(vids_hpt$category_id)
head(vids_hpt)
# scatter plot antara likes_views dengan comments_views
plot(x = vids_hpt$likes_views, y = vids_hpt$comments_views)
knitr::include_graphics("cheatsheet/thecode-1.png")
# kustomisasi scatter plot
# DIJALANKAN BERSAMAAN
plot(x = vids_hpt$likes_views, # variabel numerik 1
y = vids_hpt$comments_views,# variabel numerik 2
col = vids_hpt$category_id, # warna
pch = 19, # tipe point,
cex = 1.2, # size point
xlab = "Likes/Views",
ylab = "Comments/Views"
)
# garis regresi
abline(lm(vids_hpt$comments_views ~ vids_hpt$likes_views)) # membuat garis
# judul dan subjudul plot
title(main = "Likes/Views vs. Comments/Views",
sub = "for Howto and Style, Pets and Animals, and Travel and Events")
# legend
legend("topright", # posisi leged
legend = levels(vids_hpt$category_id), # isi legend berdasarkan category_id
fill = 1:3) # warnanya ada 3, mengikuti category id
# install package ggplot2 (hanya dijalankan sekali)
# comment kembali setelah menjalankan kode di bawah
# install.packages("ggplot2")
# import ggplot
library(ggplot2)
head(vids_hpt)
# kanvas utama (main layer)
# data: vids_hpt
# sumbu x: category_id
# sumbu y: likes_views
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views))
# menambahkan box plot di atas kanvas utama
# kanvas utama + box plot
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views)) +
geom_boxplot()
# menambahkan scatter plot di atas visualisasi sebelumnya
# kanvas utama + box plot + scatter plot
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views)) +
geom_boxplot() +
geom_point()
# menambahkan scatter plot di atas visualisasi sebelumnya
# kanvas utama + box plot + scatter plot (jitter)
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views)) +
geom_boxplot() +
geom_jitter()
# mendefinisikan comments_views sebagai ukuran jitter dengan parameter size pada aes()
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views)) +
geom_boxplot() +
geom_jitter(mapping = aes(size = comments_views))
# memberikan warna pada box plot dengan color
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views)) +
geom_boxplot(color = "green") +
geom_jitter(mapping = aes(size = comments_views))
# memberikan warna pada box plot dengan fill
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views)) +
geom_boxplot(fill = "green") +
geom_jitter(mapping = aes(size = comments_views))
# menambahkan color di luar aes() pada geom_jitter()
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views)) +
geom_boxplot(fill = "green") +
geom_jitter(mapping = aes(size = comments_views), color = "blue") # di luar fungsi aes()
# menambahkan color dalam luar aes() pada geom_jitter()
# memberikan warna jitter berdasarkan kolom publish_when
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views)) +
geom_boxplot(fill = "green") +
geom_jitter(mapping = aes(size = comments_views, color = publish_when)) # di dalam fungsi aes()
# meletakkan color sebagai parameter aes() pada fungsi ggplot()
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views, color = publish_when)) +
geom_boxplot(fill = "green") +
geom_jitter(mapping = aes(size = comments_views))
# meletakkan color sebagai parameter aes() pada fungsi geom_jitter()
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views)) +
geom_boxplot(fill = "green") +
geom_jitter(mapping = aes(size = comments_views, color = publish_when))
ggplot(data = vids_hpt, mapping = aes(x = category_id, y = likes_views)) +
geom_boxplot(fill = "green") +
geom_jitter(mapping = aes(size = comments_views, color = publish_when)) +
labs(
title = "Likeability vs Engagement vs Publish Time for Trending Video in YouTube 2023",
subtitle = "in US for 3 Category",
x = "Video Category",
y = "Likes/Views",
color = "Publish Hour Category", # nama parameter tergantung pada pendefinisian aes()
size = "Comments/Views" # nama parameter tergantung pada pendefinisian aes()
)
head(vids_unik)
# membuat dataframe trending_channel
trending_channel <- as.data.frame(table(vids_unik$channel_title))
trending_channel
# order(kolom)
order(trending_channel$Freq, decreasing = TRUE)
# output-nya adalah indeks/urutan baris
# trending_channel pada baris 2162 itu adalah channel dengan frekuensi yang tertinggi
# urutkan dengan fungsi order()
trending_channel <- trending_channel[order(trending_channel$Freq, decreasing = TRUE),]
# top 10 channel dengan video trending terbanyak
top10_channel <- head(trending_channel, 10)
top10_channel
head(top10_channel)
# kanvas utama
# sumbu x menunjukkan nama channel
# sumbu y menunjukkan frekuensi
# pembuatan kanvas
ggplot(data = top10_channel, mapping = aes(x =Var1, y = Freq)) +
geom_col()
# kanvas utama
# sumbu x menunjukkan frekuensi
# sumbu y menunjukkan nama channel
ggplot(data = top10_channel, mapping = aes(y = Var1, x = Freq)) +
geom_col()
# mengurutkan plot sebelumnya dari frekuensi tertinggi ke terendah
ggplot(data = top10_channel, mapping = aes(y = reorder(Var1, Freq), x = Freq)) +
geom_col()
# memberikan gradasi warna pada setiap bar
ggplot(data = top10_channel, mapping = aes(y = reorder(Var1, Freq), x = Freq)) +
geom_col(aes(fill = Freq)) +
scale_fill_gradient(high = "black", low = "red")
ggplot(data = top10_channel, mapping = aes(y = reorder(Var1, Freq), x = Freq)) +
geom_col(aes(fill = Freq)) +
scale_fill_gradient(high = "black", low = "red") +
geom_text(aes(label = Freq), nudge_x = -5, color = "white")+
labs(title = "Top 10 Channels with Most Trending Videos",
y = "Channel Name",
x = "Number of Trending Videos")
# nudge_x = untuk menggeser ke arah sumbu x
# silakan tambahkan judul pada plot dengan labs()
knitr::include_graphics("assets/multivariate.png")
head(vids_unik)
# melakukan aggregasi data
# ~ (tilde) dibaca "dikelompokkan berdasarkan apa"
vids_agg <- aggregate(
channel_title ~ category_id + publish_when, # formula
data = vids_unik,
FUN = length
)
# memperbaiki nama kolom
names(vids_agg) <- c("category_id", "publish_when", "vid_count")
head(vids_agg)
# contoh position = "dodge"
ggplot(data=vids_agg, mapping=aes(x=vid_count, y=reorder(category_id, vid_count), fill=publish_when)) + geom_col(position="dodge")
# contoh position = "stack"
ggplot(data=vids_agg, mapping=aes(x=vid_count, y=reorder(category_id, vid_count), fill=publish_when)) + geom_col(position="stack")
# contoh position = "fill"
ggplot(data=vids_agg, mapping=aes(x=vid_count, y=reorder(category_id, vid_count), fill=publish_when)) + geom_col(position="fill")
head(vids_unik)
# filtering
# dataframe[kondisi, ]
vids_gem <- vids_unik[vids_unik$category_id %in% c("Gaming", "Entertainment", "Music") ,]
head(vids_gem)
# filtering
# dataframe[kondisi, ]
vids_gem <- vids_unik[vids_unik$category_id %in% c("Gaming", "Entertainment", "Music") ,]
head(vids_gem)
# prepare data
# agregasi data -> aggregate(numerik ~ kategori1 + kategori2, data, FUN)
# numerik = views
# kategori1 = category_id
# kategori2 = publish_hour
vids_trend <- aggregate(views ~ category_id + publish_hour, vids_gem, FUN=mean)
vids_trend
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views))
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views)) + geom_line()
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views)) + geom_line(aes(group = category_id))
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views)) + geom_line(aes(group = category_id, color=category_id))
# visualisasi geom_line dengan color
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views)) + geom_line(aes(color=category_id))
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id))
library(scales)
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id))
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point()
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music"
)
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Legend"
)
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
)
library(scales)
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous()
library(scales)
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=","))
library(scales)
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=","), breaks=1e6)
library(scales)
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=","), breaks=seq(0, 8e6, 1e6))
library(scales)
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=","), breaks=seq(0, 9e6, 1e6))
# geom + faceting
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=","), breaks=seq(0, 9e6, 1e6))
+ facet_wrap(facets = vars(category_id), nrow=3)
# geom + faceting
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=","), breaks=seq(0, 9e6, 1e6))
+ facet_wrap(facets = vars(category_id), nrow=3)
# geom + faceting
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=","), breaks=seq(0, 9e6, 1e6)) + facet_wrap(facets = vars(category_id), nrow=3)
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=","), breaks=seq(0, 9e6, 1e6)) + facet_wrap(facets = vars(category_id), nrow=3, scales="free_x")
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=","), breaks=seq(0, 9e6, 1e6)) + facet_wrap(facets = vars(category_id), nrow=3, scales="free_y")
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=",")) + facet_wrap(facets = vars(category_id), nrow=3, scales="free_y")
ggplot(data=vids_trend, mapping=aes(x=publish_hour, y=views, color=category_id)) + geom_line(aes(group = category_id)) + geom_point() + labs(
title = "Pergerakan Rata-Rata Views untuk 3 Kategori",
x = "Jam Publish Video",
y = "Rata-Rata Views",
subtitle = "untuk kategori Entertainment, Gaming, Music",
color = "Kategori"
) + scale_y_continuous(labels=label_comma(big.mark=",")) + facet_wrap(facets = vars(category_id), nrow=3, scales="free")
ggplot(data = vids_agg, mapping = aes(x=vid_count, y=reorder(category_id, vid_count))) +
geom_col(mapping = aes(fill=publish_when), position = "dodge") +
labs(title = "Rank YouTube Trending",
subtitle = "Across All Categories",
x = "Frequency",
y = "Category",
fill="Publish Time") +
theme_minimal()
library(leaflet)
# make dummy data
set.seed(418)
loca <- data.frame(lat=runif(5, min = -6.24, max=-6.23), # latitude
lng=runif(5, min=106.835, max=106.85)) # longitude
# get icon
ico <- makeIcon(
iconUrl = "https://algorit.ma/wp-content/uploads/2023/04/Algoritma-Logo.png",
iconWidth=41/2,
iconHeight=41/2
)
# prepare pop-up
pops <- c(
"<h3>Algoritma Main HQ</h3><p>Visit us here!</p>", # h3 = Heading 3, p = paragraph
"<strong>Algoritma Business Campus</strong>", # strong = bold
"<h3>In-Construction</h3><p>New Secondary Campus</p>",
"<strong>Secondary Campus</strong>",
"<strong>The Basecamp (business-school)</strong>"
)
# check data
loca
# install package leaflet (hanya dijalankan sekali)
# comment kembali setelah menjalankan kode di bawah
install.packages("leaflet")
install.packages("leaflet")
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
# scientific notation
options(scipen = 999)
library(leaflet)
# make dummy data
set.seed(418)
loca <- data.frame(lat=runif(5, min = -6.24, max=-6.23), # latitude
lng=runif(5, min=106.835, max=106.85)) # longitude
# get icon
ico <- makeIcon(
iconUrl = "https://algorit.ma/wp-content/uploads/2023/04/Algoritma-Logo.png",
iconWidth=41/2,
iconHeight=41/2
)
# prepare pop-up
pops <- c(
"<h3>Algoritma Main HQ</h3><p>Visit us here!</p>", # h3 = Heading 3, p = paragraph
"<strong>Algoritma Business Campus</strong>", # strong = bold
"<h3>In-Construction</h3><p>New Secondary Campus</p>",
"<strong>Secondary Campus</strong>",
"<strong>The Basecamp (business-school)</strong>"
)
# check data
loca
# create a leaflet map widget
map <- leaflet()
# add tiles (kerangka peta) from open street map
map <- addTiles(map = map)
# add markers
addMarkers(map = map, data = loca, icon = ico, popup = pops)
