# hitung manual
profit <- -114.0625 + 0.4229 * 1000
profit
# berapa profit jika sales 650
profit650 <- -114.0625 + 0.4229 * 650
profit650
# dummy data
new_sales <- data.frame(Sales = c(300, 290, 320, 450))
new_sales
# gunakan fungsi predict untuk memprediksi data baru
predict(model_ols, new_sales)
summary(model_ols)
knitr::include_graphics("assets/model_interpretation.png")
summary(model_ols)
knitr::include_graphics("assets/leverage_vs_influence.png")
# membuat boxplot prediktor Sales
boxplot(copiers$Sales, horizontal = T)
abline(model_ols, color = "red")
# membuat scatter plot antara Sales dan Profit
plot(copiers$Sales, copiers$Profit)
# membuat scatter plot antara Sales dan Profit
plot(copiers$Sales, copiers$Profit)
abline(model_ols, color = "red")
# buat model
model_no_outlier <- lm(Profit ~ Sales, data = copiers_new)
# ambil data dengan nilai Sales < 4000 (no outlier)
copiers_new <- copiers[copiers$Sales < 4000,]
# buat model
model_no_outlier <- lm(Profit ~ Sales, data = copiers_new)
# summary model
summary(model_no_outlier)
plot(copiers$Sales, copiers$Profit)
abline(model_ols, col="red")
abline(model_no_outlier, col="blue")
# komparasi model
compare_performance(model_ols, model_no_outlier)
# komparasi model
compare_performance(model_ols, model_no_outlier)
library(performance)
# komparasi model
compare_performance(model_ols, model_no_outlier)
# lihat summary model
summary(model_ols_multi)
# . artinya menggunakan semua kolom selain target
model_ols_multi <- lm(formula = Profit ~ ., data = copiers)
# lihat summary model
summary(model_ols_multi)
# dataframe example_numeric
example_numeric <- data.frame(
Ship.Mode = c("Same Day", "Same Day"),
Segment = c("Corporate", "Corporate"),
Quantity = c(1, 1),
Discount = c(0, 0),
Sales = c(100, 101)
)
# melalukan prediksi pada dataframe di atas
example_numeric$PredictedProfit <- predict(model_ols_multi, example_numeric)
# menampilkan dataframe
example_numeric
# perbandingan data sales = 100 dan sales = 101
example_numeric$PredictedProfit[2] - example_numeric$PredictedProfit[1]
knitr::include_graphics("assets/dummy_var.png")
# dataframe contoh
contoh <- data.frame(
Ship.Mode = c("Same Day", "Same Day", "Same Day"),
Segment = c("Consumer", "Corporate", "Home Office"),
Sales = c(2, 2, 2),
Quantity = c(1, 1, 1),
Discount = c(0, 0, 0))
# melalukan prediksi pada dataframe contoh
contoh$PredictedProfit <- predict(model_ols_multi, contoh)
# menampilkan dataframe
contoh
# dataframe contoh
contoh <- data.frame(
Ship.Mode = c("Same Day", "Same Day", "Same Day"),
Segment = c("Consumer", "Corporate", "Home Office"),
Sales = c(2, 2, 2),
Quantity = c(1, 1, 1),
Discount = c(0, 0, 0))
# melalukan prediksi pada dataframe contoh
contoh$PredictedProfit <- predict(model_ols_multi, contoh)
# menampilkan dataframe
contoh
# melihat r-squared
summary(model_ols_multi)
# melihat r-squared
summary(model_ols_multi)
compare_performance(model_ols, model_ols_multi)
# lihat signifikan prediktor
summary(model_ols_multi)
# lm(Target ~ Prediktor1 + Prediktor2, data)
model_ols_multi2 <- lm(Profit ~ Sales + Discount, copiers)
# melihat summary model
summary(model_ols_multi2)
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
options(scipen = 99)
knitr::include_graphics("assets/term.png")
house_data <- data.frame(
Bedrooms = c(3, 3, 2, 4),
AreaInMtrSqr = c(150, 100, 100, 200),
Floors = c(1, 2, 1, 1),
ZipCode = c(98178, 98125, 98028, 98074),
Price = c(125000, 175000, 75000, 225000)
)
house_data
# baca data copiers
copiers <- read.csv("data_input/copiers.csv")
# tampilkan 6 data teratas
head(copiers)
str(copiers)
# import library
library(dplyr)
# melakukan feature selection
copiers <- copiers[, c("Ship.Mode", "Segment", "Sales", "Quantity", "Discount", "Profit")]
# tampilkan data
head(copiers)
# periksa struktur data menggunakan base R
str(copiers)
# periksa struktur data menggunakan library glimpse
glimpse(copiers)
# mengubah tipe data
copiers$Ship.Mode <- as.factor(copiers$Ship.Mode)
copiers$Segment <- as.factor(copiers$Segment)
# menampilkan struktur data
str(copiers)
knitr::include_graphics("assets/correlation.png")
# import library
library(GGally)
# cek korelasi
ggcorr(data = copiers, label = T)
# visualisasi scatter plot
plot(copiers$Sales, copiers$Profit)
# buat fungsi lm(target ~ prediktor, data = dataframe)
model_ols <- lm(formula = Profit ~ Sales, data = copiers)
# melihat hasil model
model_ols
model_ols
# membuat scatter plot
plot(copiers$Sales, copiers$Profit)
# membuat garis lurus
abline(model_ols, col = "red")
# hitung manual
profit <- -114.0625 + 0.4229 * 1000
profit
# berapa profit jika sales 650
profit650 <- -114.0625 + 0.4229 * 650
profit650
# dummy data
new_sales <- data.frame(Sales = c(300, 290, 320, 450))
new_sales
# gunakan fungsi predict untuk memprediksi data baru
predict(model_ols, new_sales)
summary(model_ols)
knitr::include_graphics("assets/model_interpretation.png")
summary(model_ols)
knitr::include_graphics("assets/leverage_vs_influence.png")
# membuat boxplot prediktor Sales
boxplot(copiers$Sales, horizontal = T)
# membuat scatter plot antara Sales dan Profit
plot(copiers$Sales, copiers$Profit)
abline(model_ols, color = "red")
# ambil data dengan nilai Sales < 4000 (no outlier)
copiers_new <- copiers[copiers$Sales < 4000,]
# buat model
model_no_outlier <- lm(Profit ~ Sales, data = copiers_new)
# summary model
summary(model_no_outlier)
plot(copiers$Sales, copiers$Profit)
abline(model_ols, col="red")
abline(model_no_outlier, col="blue")
library(performance)
# komparasi model
compare_performance(model_ols, model_no_outlier)
# . artinya menggunakan semua kolom selain target
model_ols_multi <- lm(formula = Profit ~ ., data = copiers)
# lihat summary model
summary(model_ols_multi)
# dataframe example_numeric
example_numeric <- data.frame(
Ship.Mode = c("Same Day", "Same Day"),
Segment = c("Corporate", "Corporate"),
Quantity = c(1, 1),
Discount = c(0, 0),
Sales = c(100, 101)
)
# melalukan prediksi pada dataframe di atas
example_numeric$PredictedProfit <- predict(model_ols_multi, example_numeric)
# menampilkan dataframe
example_numeric
# perbandingan data sales = 100 dan sales = 101
example_numeric$PredictedProfit[2] - example_numeric$PredictedProfit[1]
knitr::include_graphics("assets/dummy_var.png")
# dataframe contoh
contoh <- data.frame(
Ship.Mode = c("Same Day", "Same Day", "Same Day"),
Segment = c("Consumer", "Corporate", "Home Office"),
Sales = c(2, 2, 2),
Quantity = c(1, 1, 1),
Discount = c(0, 0, 0))
# melalukan prediksi pada dataframe contoh
contoh$PredictedProfit <- predict(model_ols_multi, contoh)
# menampilkan dataframe
contoh
# melihat r-squared
summary(model_ols_multi)
compare_performance(model_ols, model_ols_multi)
# lihat signifikan prediktor
summary(model_ols_multi)
# lm(Target ~ Prediktor1 + Prediktor2, data)
model_ols_multi2 <- lm(Profit ~ Sales + Discount, copiers)
# melihat summary model
summary(model_ols_multi2)
# prediksi model dengan satu prediktor
copiers$pred_ols <- predict(model_ols, copiers)
# prediksi dari model semua prediktor
copiers$pred_ols_multi <- predict(model_ols_multi, copiers)
# prediksi dari model 2 prediktor signifikan (sales + discount)
copiers$pred_ols_multi2 <- predict(model_ols_multi2, copiers)
# menampilkan data
head(copiers)
# tampilkan data profit, pred_ols pred_ols_multi, dan pred_ols_multi2 pada data copiers
copiers[, c("Profit", "pred_ols", "pred_ols_multi", "pred_ols_multi2")]
# import library MLmetrics
library(MLmetrics)
# hitung MAE prediksi model ols multi -> pred_ols_multi
MAE(copiers$pred_ols_multi, copiers$Profit)
# hitung MSE prediksi model ols multi -> pred_ols_multi
MSE(copiers$pred_ols_multi, copiers$Profit)
# hitung RMSE prediksi model ols multi -> pred_ols_multi
RMSE(copiers$pred_ols_multi, copiers$Profit)
# hitung MAPE prediksi model ols multi -> pred_ols_multi
MAPE(copiers$pred_ols_multi, copiers$Profit)
# hitung MAPE prediksi model ols multi -> pred_ols_multi
MAPE(copiers$pred_ols_multi, copiers$Profit)
# membandingkan model terbaik dengan MAPE
# model ols -> pred_ols
MAPE(copiers$pred_ols)
# model ols multi -> pred_ols_multi
MAPE(copiers$pred_ols_multi)
# model ols multi2 -> pred_ols_multi2
MAPE(copiers$pred_ols_multi2)
# membandingkan model terbaik dengan MAPE
# model ols -> pred_ols
MAPE(copiers$pred_ols, copiers$Profit)
# model ols multi -> pred_ols_multi
MAPE(copiers$pred_ols_multi, copiers$Profit)
# model ols multi2 -> pred_ols_multi2
MAPE(copiers$pred_ols_multi2, copiers$Profit)
cc <- read.csv("data_input/credit_card.csv", stringsAsFactors = T)
cc
cc <- read.csv("data_input/credit_card.csv", stringsAsFactors = T)
cc
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
options(scipen = 99)
knitr::include_graphics("assets/term.png")
house_data <- data.frame(
Bedrooms = c(3, 3, 2, 4),
AreaInMtrSqr = c(150, 100, 100, 200),
Floors = c(1, 2, 1, 1),
ZipCode = c(98178, 98125, 98028, 98074),
Price = c(125000, 175000, 75000, 225000)
)
house_data
# baca data copiers
copiers <- read.csv("data_input/copiers.csv")
# tampilkan 6 data teratas
head(copiers)
str(copiers)
# import library
library(dplyr)
# melakukan feature selection
copiers <- copiers[, c("Ship.Mode", "Segment", "Sales", "Quantity", "Discount", "Profit")]
# tampilkan data
head(copiers)
# periksa struktur data menggunakan base R
str(copiers)
# periksa struktur data menggunakan library glimpse
glimpse(copiers)
# mengubah tipe data
copiers$Ship.Mode <- as.factor(copiers$Ship.Mode)
copiers$Segment <- as.factor(copiers$Segment)
# menampilkan struktur data
str(copiers)
knitr::include_graphics("assets/correlation.png")
# import library
library(GGally)
# cek korelasi
ggcorr(data = copiers, label = T)
# visualisasi scatter plot
plot(copiers$Sales, copiers$Profit)
# buat fungsi lm(target ~ prediktor, data = dataframe)
model_ols <- lm(formula = Profit ~ Sales, data = copiers)
# melihat hasil model
model_ols
model_ols
# membuat scatter plot
plot(copiers$Sales, copiers$Profit)
# membuat garis lurus
abline(model_ols, col = "red")
# hitung manual
profit <- -114.0625 + 0.4229 * 1000
profit
# berapa profit jika sales 650
profit650 <- -114.0625 + 0.4229 * 650
profit650
# dummy data
new_sales <- data.frame(Sales = c(300, 290, 320, 450))
new_sales
# gunakan fungsi predict untuk memprediksi data baru
predict(model_ols, new_sales)
summary(model_ols)
knitr::include_graphics("assets/model_interpretation.png")
summary(model_ols)
knitr::include_graphics("assets/leverage_vs_influence.png")
# membuat boxplot prediktor Sales
boxplot(copiers$Sales, horizontal = T)
# membuat scatter plot antara Sales dan Profit
plot(copiers$Sales, copiers$Profit)
abline(model_ols, color = "red")
# ambil data dengan nilai Sales < 4000 (no outlier)
copiers_new <- copiers[copiers$Sales < 4000,]
# buat model
model_no_outlier <- lm(Profit ~ Sales, data = copiers_new)
# summary model
summary(model_no_outlier)
plot(copiers$Sales, copiers$Profit)
abline(model_ols, col="red")
abline(model_no_outlier, col="blue")
library(performance)
# komparasi model
compare_performance(model_ols, model_no_outlier)
# . artinya menggunakan semua kolom selain target
model_ols_multi <- lm(formula = Profit ~ ., data = copiers)
# lihat summary model
summary(model_ols_multi)
# dataframe example_numeric
example_numeric <- data.frame(
Ship.Mode = c("Same Day", "Same Day"),
Segment = c("Corporate", "Corporate"),
Quantity = c(1, 1),
Discount = c(0, 0),
Sales = c(100, 101)
)
# melalukan prediksi pada dataframe di atas
example_numeric$PredictedProfit <- predict(model_ols_multi, example_numeric)
# menampilkan dataframe
example_numeric
# perbandingan data sales = 100 dan sales = 101
example_numeric$PredictedProfit[2] - example_numeric$PredictedProfit[1]
knitr::include_graphics("assets/dummy_var.png")
# dataframe contoh
contoh <- data.frame(
Ship.Mode = c("Same Day", "Same Day", "Same Day"),
Segment = c("Consumer", "Corporate", "Home Office"),
Sales = c(2, 2, 2),
Quantity = c(1, 1, 1),
Discount = c(0, 0, 0))
# melalukan prediksi pada dataframe contoh
contoh$PredictedProfit <- predict(model_ols_multi, contoh)
# menampilkan dataframe
contoh
# melihat r-squared
summary(model_ols_multi)
compare_performance(model_ols, model_ols_multi)
# lihat signifikan prediktor
summary(model_ols_multi)
# lm(Target ~ Prediktor1 + Prediktor2, data)
model_ols_multi2 <- lm(Profit ~ Sales + Discount, copiers)
# melihat summary model
summary(model_ols_multi2)
# prediksi model dengan satu prediktor
copiers$pred_ols <- predict(model_ols, copiers)
# prediksi dari model semua prediktor
copiers$pred_ols_multi <- predict(model_ols_multi, copiers)
# prediksi dari model 2 prediktor signifikan (sales + discount)
copiers$pred_ols_multi2 <- predict(model_ols_multi2, copiers)
# menampilkan data
head(copiers)
# tampilkan data profit, pred_ols pred_ols_multi, dan pred_ols_multi2 pada data copiers
copiers[, c("Profit", "pred_ols", "pred_ols_multi", "pred_ols_multi2")]
# import library MLmetrics
library(MLmetrics)
# hitung MAE prediksi model ols multi -> pred_ols_multi
MAE(copiers$pred_ols_multi, copiers$Profit)
# hitung MSE prediksi model ols multi -> pred_ols_multi
MSE(copiers$pred_ols_multi, copiers$Profit)
# hitung RMSE prediksi model ols multi -> pred_ols_multi
RMSE(copiers$pred_ols_multi, copiers$Profit)
# hitung MAPE prediksi model ols multi -> pred_ols_multi
MAPE(copiers$pred_ols_multi, copiers$Profit)
# membandingkan model terbaik dengan MAPE
# model ols -> pred_ols
MAPE(copiers$pred_ols, copiers$Profit)
# model ols multi -> pred_ols_multi
MAPE(copiers$pred_ols_multi, copiers$Profit)
# model ols multi2 -> pred_ols_multi2
MAPE(copiers$pred_ols_multi2, copiers$Profit)
cc <- read.csv("data_input/credit_card.csv", stringsAsFactors = T)
cc
cc <- read.csv("data_input/credit_card.csv", stringsAsFactors = T)
cc
# cek struktur data
str(cc)
library(GGally)
ggcorr(data = cc, label = T) # label untuk menampilkan nilai korelasi
# lihat summary model
summary(best_model_cc)
# membuat model
best_model_cc <- lm(Balance ~ . - Rating, cc)
# lihat summary model
summary(best_model_cc)
# membuat model
best_model_cc <- lm(Balance ~ . - Limit, cc)
# lihat summary model
summary(best_model_cc)
# lakukan prediksi data
pred_balance <- predict(best_model_cc, cc)
pred_balance
MAPE(y_pred = pred_balance, y_true = cc$Balance)
knitr::include_graphics("assets/backward.png")
# langkah awal: model seluruh prediktor
model_balance_all <- lm(Balance ~ . - Limit, cc)
# cek summary model
summary(model_balance_all)
# langkah awal: model seluruh prediktor
model_balance_all <- lm(Balance ~ . - Limit, cc)
# cek summary model
summary(model_balance_all)
# stepwise regression: backward elimination
model_backward <- step(object = model_balance_all,
direction = "backward")
# summary model
summary(model_backward)
knitr::include_graphics("assets/forward.png")
# langkah awal: model tanpa prediktor
model_balance_none <- lm(Balance ~ 1, cc)
# stepwise regression: forward selection
model_forward <- step(object = model_balance_none,
direction = "forward",
scope = list(upper= model_balance_all),
trace=F)
# summary model
summary(model_forward)
# stepwise regression: forward selection
model_forward <- step(object = model_balance_none,
direction = "forward",
scope = list(upper= model_balance_all),
trace=T)
# stepwise regression: both
# diawali dengan none, uppernya all predictor
# cara pembuatan sama dengn forward, tinggal ganti direction
model_both <- step(object = model_balance_none,
direction = "both",
scope = list(upper= model_balance_all),
trace=T)
# summary model
summary(model_both)
# Nilai adj. r-squared model backward
summary(model_backward)$adj.r.squared
# Nilai adj. r-squared model forward
summary(model_forward)$adj.r.squared
# Nilai adj. r-squared model both
summary(model_both)$adj.r.squared
# prediksi biasa
pred_model_step <- predict(model_backward, cc)
# menampilkan hasil prediksi
head(pred_model_step)
# untuk menambahkan batas atas-bawah
pred_model_step_interval <- predict(object = model_backward,
newdata = cc,
interval = "prediction",
level = 0.95)
# menampilkan hasil prediksi
head(pred_model_step_interval)
plot(model_backward, which = 1)
abline(h = 10, col = "green")
abline(h = -10, col = "green")
# histogram residual
hist(model_backward$residuals)
# shapiro test dari residual
shapiro.test(model_backward$residuals)
knitr::include_graphics("assets/homoscedasticity.png")
plot(model_backward, which = 1)
library(lmtest)
bptest(model_backward)
library(car)
vif(model_backward)
# modeling dengan semua prediktor (termasuk limit)
model_multiko <- lm(Balance ~ ., cc)
# modeling dengan semua prediktor (termasuk limit)
model_multiko <- lm(Balance ~ ., cc)
# summary model
summary(model_multiko)
# cek multikolinearitas
vif(model_multiko)
